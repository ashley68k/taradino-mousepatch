Author: Fabian Greffrath <fabian+debian@greffrath.com>
Description: Make the "registered" variant recognize all supported
 multiplayer map files and set 'gamestate.Product' accordingly.
 This saves us from rebuilding the SUPERROTT and SITELICENSE variants
 which had their multiplayer map file names hard-coded.

--- a/rott/Makefile
+++ b/rott/Makefile
@@ -1,14 +1,8 @@
 # Determine which version to build
-# Make sure only one of the following is set to 1 at once
-# Triple 0 will build the commercial/registered version
-
-SHAREWARE   ?= 1
-SUPERROTT   ?= 0
-SITELICENSE ?= 0
+# Leave at 0 to build the commercial/superrott/sitelicense version
 
+SHAREWARE ?= 0
 CPPFLAGS += -DSHAREWARE=$(SHAREWARE)
-CPPFLAGS += -DSUPERROTT=$(SUPERROTT)
-CPPFLAGS += -DSITELICENSE=$(SITELICENSE)
 
 ROTT ?= rott
 
--- a/rott/_rt_ted.h
+++ b/rott/_rt_ted.h
@@ -84,19 +84,6 @@ typedef struct
 
 #define  MAXSILLYSTRINGS 32
 
-#if (SHAREWARE==0)
-   #define  STANDARDGAMELEVELS   (DATADIR "DARKWAR.RTL")
-   #if (SUPERROTT==1)
-       #define  STANDARDBATTLELEVELS (DATADIR "ROTTCD.RTC")
-   #elif (SITELICENSE==1)
-       #define  STANDARDBATTLELEVELS (DATADIR "ROTTSITE.RTC")
-   #else
-       #define  STANDARDBATTLELEVELS (DATADIR "DARKWAR.RTC")
-   #endif
-#else
-   #define  STANDARDGAMELEVELS   (DATADIR "HUNTBGIN.RTL")
-   #define  STANDARDBATTLELEVELS (DATADIR "HUNTBGIN.RTC")
-#endif
 
 
 
--- a/rott/develop.h
+++ b/rott/develop.h
@@ -40,10 +40,10 @@ Foundation, Inc., 59 Temple Place - Suit
 #define LOWCOST  0
 
 #define BNACRASHPREVENT  1 //bna added 
-// Make sure only one of the following are on at one time
-//#define SHAREWARE   1
-//#define SUPERROTT   0
-//#define SITELICENSE 0
+
+#ifndef SHAREWARE
+#define SHAREWARE 0
+#endif
 
 // cute little dopefish thing, only works with special patch?
 #define DOPEFISH 0
--- a/rott/rt_main.c
+++ b/rott/rt_main.c
@@ -179,6 +179,7 @@ extern void RecordDemoQuery ( void );
 int main (int argc, char *argv[])
 {
     char *macwd;
+    extern char *BATTMAPS;
 #ifndef DOS
 	_argc = argc;
 	_argv = argv;
@@ -214,13 +215,33 @@ int main (int argc, char *argv[])
    gamestate.Version = ROTTVERSION;
 
 #if ( SHAREWARE == 1 )
+   BATTMAPS = strdup(STANDARDBATTLELEVELS);
+   FixFilePath(BATTMAPS);
    gamestate.Product = ROTT_SHAREWARE;
-#elif ( SUPERROTT == 1 )
-   gamestate.Product = ROTT_SUPERCD;
-#elif ( SITELICENSE == 1 )
-   gamestate.Product = ROTT_SITELICENSE;
 #else
-   gamestate.Product = ROTT_REGISTERED;
+   BATTMAPS = strdup(SITELICENSEBATTLELEVELS);
+   FixFilePath(BATTMAPS);
+   if (!access(BATTMAPS, R_OK))
+   {
+       gamestate.Product = ROTT_SITELICENSE;
+   }
+   else
+   {
+       free(BATTMAPS);
+       BATTMAPS = strdup(SUPERROTTBATTLELEVELS);
+       FixFilePath(BATTMAPS);
+       if (!access(BATTMAPS, R_OK))
+       {
+           gamestate.Product = ROTT_SUPERCD;
+       }
+       else
+       {
+           free(BATTMAPS);
+           BATTMAPS = strdup(STANDARDBATTLELEVELS);
+           FixFilePath(BATTMAPS);
+           gamestate.Product = ROTT_REGISTERED;
+       }
+   }
 #endif
 
    DrawRottTitle ();
--- a/rott/rt_main.h
+++ b/rott/rt_main.h
@@ -31,6 +31,16 @@ Foundation, Inc., 59 Temple Place - Suit
 #include "rottnet.h"
 #include "rt_battl.h"
 
+#if (SHAREWARE==0)
+   #define  STANDARDGAMELEVELS   (DATADIR "DARKWAR.RTL")
+   #define  STANDARDBATTLELEVELS (DATADIR "DARKWAR.RTC")
+   #define  SUPERROTTBATTLELEVELS (DATADIR "ROTTCD.RTC")
+   #define  SITELICENSEBATTLELEVELS (DATADIR "ROTTSITE.RTC")
+#else
+   #define  STANDARDGAMELEVELS   (DATADIR "HUNTBGIN.RTL")
+   #define  STANDARDBATTLELEVELS (DATADIR "HUNTBGIN.RTC")
+#endif
+
 enum
 {vl_low,
  vl_medium,
--- a/rott/rt_ted.c
+++ b/rott/rt_ted.c
@@ -115,7 +115,7 @@ static cachetype * cachelist;
 static word cacheindex;
 static boolean CachingStarted=false;
 static char * ROTTMAPS = STANDARDGAMELEVELS;
-static char * BATTMAPS = STANDARDBATTLELEVELS;
+char * BATTMAPS;
 
 static char NormalWeaponTiles[ 10 ] =
    {
--- a/rott/rt_actor.c
+++ b/rott/rt_actor.c
@@ -1621,11 +1621,8 @@ void SpawnStand (classtype which, int ti
 
 
  #if 0
- #if (SUPERROTT == 1)
-
+ if (gamestate.Product == ROTT_SUPERCD)
    ConsiderAlternateActor(new,which);
-
- #endif
  #endif
 
    StandardEnemyInit(new,dir);
@@ -1671,10 +1668,9 @@ void SpawnPatrol (classtype which, int t
 {statetype *temp;
  int path=PATH;
 #if 0
-#if (SUPERROTT == 1)
+if (gamestate.Product == ROTT_SUPERCD)
  char *altstartlabel;
 #endif
-#endif
 
 
 
@@ -1711,10 +1707,9 @@ void SpawnPatrol (classtype which, int t
 
 
    #if 0
-   #if (SUPERROTT == 1)
+   if (gamestate.Product == ROTT_SUPERCD)
    ConsiderAlternateActor(new,which);
    #endif
-   #endif
 
    StandardEnemyInit(new,dir);
 
--- a/rott/rt_menu.c
+++ b/rott/rt_menu.c
@@ -7155,8 +7155,6 @@ void CP_TeamPlayErrorMessage
 //
 //****************************************************************************
 
-#if (SITELICENSE == 0)
-
 #define SITELINES 8
 
 char *sitemessage[] =
@@ -7171,8 +7169,6 @@ char *sitemessage[] =
    "For more on site licenses, see ORDERING INFO."
    };
 
-#endif
-
 void CP_ModemGameMessage (int player  )
 
    {
@@ -7215,7 +7211,8 @@ void CP_ModemGameMessage (int player  )
          MenuBufCPrint ("Please wait while\nMaster selects\nCOMM-BAT options.");
          }
 
-#if (SITELICENSE == 0)
+if (gamestate.Product != ROTT_SITELICENSE)
+{
       if (networkgame==true)
          {
          for( i = 0; i < SITELINES; i++ )
@@ -7224,7 +7221,7 @@ void CP_ModemGameMessage (int player  )
                sitemessage[ i ] );
             }
          }
-#endif
+}
       }
 
    FlipMenuBuf();
