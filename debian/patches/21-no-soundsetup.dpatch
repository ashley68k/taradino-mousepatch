#! /bin/sh /usr/share/dpatch/dpatch-run
## 21-no-soundsetup.dpatch by Michael Karcher
## <debian@mkarcher.dialup.fu-berlin.de>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Disable sound setup except on DOS.

@DPATCH@
diff -urNad rott-1.0+dfsg~/fx_man.c rott-1.0+dfsg/fx_man.c
--- rott-1.0+dfsg~/fx_man.c	2008-01-10 09:20:04.000000000 +0100
+++ rott-1.0+dfsg/fx_man.c	2008-01-10 09:20:05.000000000 +0100
@@ -300,22 +300,6 @@
     snddebug("Error message set to [%s].", errorMessage);
 } // setErrorMessage
 
-
-int FX_GetBlasterSettings(fx_blaster_config *blaster)
-{
-    setErrorMessage("No SoundBlaster cards available.");
-    return(FX_Error);
-} // FX_GetBlasterSettings
-
-
-int FX_SetupSoundBlaster(fx_blaster_config blaster, int *MaxVoices,
-                         int *MaxSampleBits, int *MaxChannels)
-{
-    setErrorMessage("No SoundBlaster cards available.");
-    return(FX_Error);
-} // FX_SetupSoundBlaster
-
-
 int FX_SetupCard( int SoundCard, fx_device *device )
 {
     init_debugging();
diff -urNad rott-1.0+dfsg~/fx_man.h rott-1.0+dfsg/fx_man.h
--- rott-1.0+dfsg~/fx_man.h	2008-01-09 13:52:29.000000000 +0100
+++ rott-1.0+dfsg/fx_man.h	2008-01-10 09:20:05.000000000 +0100
@@ -1,3 +1,4 @@
+
 /*
 Copyright (C) 1994-1995 Apogee Software, Ltd.
 
@@ -43,17 +44,6 @@
 #define MonoFx   1
 #define StereoFx 2
 
-typedef struct
-   {
-   unsigned long Address;
-   unsigned long Type;
-   unsigned long Interrupt;
-   unsigned long Dma8;
-   unsigned long Dma16;
-   unsigned long Midi;
-   unsigned long Emu;
-   } fx_blaster_config;
-
 enum FX_ERRORS
    {
    FX_Warning = -2,
@@ -67,6 +57,7 @@
    FX_DPMI_Error
    };
 
+#ifdef DOS
 enum fx_BLASTER_Types
    {
    fx_SB     = 1,
@@ -75,12 +66,11 @@
    fx_SBPro2 = 4,
    fx_SB16   = 6
    };
+#endif
 
 
 char *FX_ErrorString( int ErrorNumber );
 int   FX_SetupCard( int SoundCard, fx_device *device );
-int   FX_GetBlasterSettings( fx_blaster_config *blaster );
-int   FX_SetupSoundBlaster( fx_blaster_config blaster, int *MaxVoices, int *MaxSampleBits, int *MaxChannels );
 int   FX_Init( int SoundCard, int numvoices, int numchannels, int samplebits, unsigned mixrate );
 int   FX_Shutdown( void );
 int   FX_SetCallBack( void ( *function )( unsigned long ) );
diff -urNad rott-1.0+dfsg~/rt_cfg.c rott-1.0+dfsg/rt_cfg.c
--- rott-1.0+dfsg~/rt_cfg.c	2008-01-09 13:52:29.000000000 +0100
+++ rott-1.0+dfsg/rt_cfg.c	2008-01-10 09:20:05.000000000 +0100
@@ -98,10 +98,12 @@
 int     MUvolume         = 196;
 int     FXvolume         = 196;
 
+#ifdef DOS
 fx_blaster_config SBSettings =
    {
    0x220, fx_SB, 7, 1, 5, 0x330, 0x620
    };
+#endif
 
 boolean mouseenabled     = 1;
 boolean joystickenabled  = 0;
@@ -112,7 +114,9 @@
 int     NumVoices        = 4;
 int     NumChannels      = 1;
 int     NumBits          = 8;
+#ifdef DOS
 int     MidiAddress      = 0x330;
+#endif
 boolean cybermanenabled  = false;
 boolean assassinenabled  = false;
 boolean spaceballenabled = false;
@@ -288,14 +292,17 @@
 
       ReadInt ("NumBits",&NumBits);
 
+#ifdef DOS
       // Read in Midi Address
 
       ReadInt ("MidiAddress",&MidiAddress);
+#endif
 
       // Read in stereo reversal
 
       ReadBoolean ("StereoReverse",&stereoreversed);
 
+#ifdef DOS
       // Read in Sound Blaster info
       ReadUnsigned ("SBType",  &SBSettings.Type );
       ReadUnsigned ("SBPort",  &SBSettings.Address );
@@ -304,6 +311,7 @@
       ReadUnsigned ("SBDma16", &SBSettings.Dma16 );
       ReadUnsigned ("SBMidi",  &SBSettings.Midi );
       ReadUnsigned ("SBEmu",   &SBSettings.Emu );
+#endif
    }
    else
       retval = false;
@@ -324,7 +332,9 @@
    )
 
    {
+#ifdef DOS
    fx_blaster_config blaster;
+#endif
    int status;
 
    //
@@ -337,7 +347,6 @@
    NumVoices   = 8;
    NumChannels = 2;
    NumBits     = 16;
-   MidiAddress = 0x330;
    stereoreversed = false;
    #else
    MusicMode   = 0;
@@ -347,7 +356,6 @@
    NumBits     = 8;
    MidiAddress = 0x330;
    stereoreversed = false;
-   #endif
 
    status = FX_GetBlasterSettings( &blaster );
    if ( status == FX_Ok )
@@ -360,6 +368,7 @@
       SBSettings.Midi      = blaster.Midi;
       SBSettings.Emu       = blaster.Emu;
       }
+   #endif
    }
 
 
@@ -1519,6 +1528,7 @@
    SafeWriteString(file,"\n;\n");
    SafeWriteString(file,"; Music Modes\n");
    SafeWriteString(file,"; 0  -  Off\n");
+#ifdef DOS
    SafeWriteString(file,"; 1  -  UltraSound\n");
    SafeWriteString(file,"; 2  -  Sound Blaster\n");
    SafeWriteString(file,"; 3  -  Sound Man 16\n");
@@ -1529,6 +1539,9 @@
    SafeWriteString(file,"; 8  -  General Midi\n");
    SafeWriteString(file,"; 9  -  Sound Canvas\n");
    SafeWriteString(file,"; 10 -  Adlib\n");
+#else
+   SafeWriteString(file,"; 6  -  On\n");
+#endif
    WriteParameter(file,"MusicMode        ",MusicMode);
 
    // Write out FX Mode
@@ -1536,6 +1549,7 @@
    SafeWriteString(file,"\n;\n");
    SafeWriteString(file,"; FX Modes\n");
    SafeWriteString(file,"; 0  -  Off\n");
+#ifdef DOS
    SafeWriteString(file,"; 1  -  UltraSound\n");
    SafeWriteString(file,"; 2  -  Sound Blaster\n");
    SafeWriteString(file,"; 3  -  Sound Man 16\n");
@@ -1546,6 +1560,9 @@
    SafeWriteString(file,"; 8  -  Disney Sound Source\n");
    SafeWriteString(file,"; 9  -  Tandy Sound Source\n");
    SafeWriteString(file,"; 10 -  PC Speaker\n");
+#else
+   SafeWriteString(file,"; 6  -  On\n");
+#endif
    WriteParameter(file,"FXMode           ",FXMode);
 
    // Write in Music Volume
@@ -1585,6 +1602,7 @@
    SafeWriteString(file,"; 16 bit\n");
    WriteParameter(file,"NumBits          ",NumBits);
 
+#ifdef DOS
    // Write out Midi Address
 
    SafeWriteString(file,"\n;\n");
@@ -1599,6 +1617,7 @@
    SafeWriteString(file,"; $370\n");
    SafeWriteString(file,"; $380\n");
    WriteParameterHex(file,"MidiAddress      ",MidiAddress);
+#endif
 
    // Write out stereo reversal
 
@@ -1608,6 +1627,7 @@
    SafeWriteString(file,"; 1 reverse stereo\n");
    WriteParameter (file,"StereoReverse      ",stereoreversed);
 
+#ifdef DOS
    // Write out Sound Blaster info
 
    SafeWriteString(file,"\n;\n");
@@ -1619,6 +1639,7 @@
    WriteParameter(file, "SBDma16          ", SBSettings.Dma16 );
    WriteParameterHex(file, "SBMidi           ", SBSettings.Midi );
    WriteParameterHex(file, "SBEmu            ", SBSettings.Emu );
+#endif
 
    close (file);
    }
diff -urNad rott-1.0+dfsg~/rt_cfg.h rott-1.0+dfsg/rt_cfg.h
--- rott-1.0+dfsg~/rt_cfg.h	2008-01-09 13:52:29.000000000 +0100
+++ rott-1.0+dfsg/rt_cfg.h	2008-01-10 09:20:05.000000000 +0100
@@ -46,7 +46,9 @@
 extern int     NumVoices;
 extern int     NumChannels;
 extern int     NumBits;
+#ifdef DOS
 extern int     MidiAddress;
+#endif
 extern boolean stereoreversed;
 extern boolean cybermanenabled;
 extern boolean assassinenabled;
diff -urNad rott-1.0+dfsg~/rt_main.c rott-1.0+dfsg/rt_main.c
--- rott-1.0+dfsg~/rt_main.c	2008-01-10 09:20:04.000000000 +0100
+++ rott-1.0+dfsg/rt_main.c	2008-01-10 09:20:05.000000000 +0100
@@ -119,7 +119,9 @@
 boolean FullScreen		= false;
 boolean newlevel = false;
 boolean infopause;
+#ifdef DOS
 boolean SOUNDSETUP=false;
+#endif
 boolean quiet = false;
 
 #if (DEVELOPMENT == 1)
@@ -294,6 +296,7 @@
             printf( "Sound FX disabled.\n" );
          }
 
+#ifdef DOS
       if ( status1 || status2 || status3 )
          {
          printf( "\n\nROTT was unable to initialize your " );
@@ -317,6 +320,7 @@
                  "Now entering sound setup.\n" );
          SOUNDSETUP = true;
          }
+#endif
 
       Init_Tables ();
       InitializeRNG ();
@@ -361,11 +365,13 @@
 //   SetBorderColor(155);
    SetViewSize(8);
 
+#ifdef DOS
    if ( SOUNDSETUP )
       {
       SwitchPalette( origpal, 35 );
       CP_SoundSetup();
       }
+#endif
 
    playstate = ex_titles;
 
@@ -445,8 +451,10 @@
       {
       SetTextMode();
       TurnOffTextCursor ();
+#ifdef DOS
       if (CheckParm ("SOUNDSETUP") == 0)
          {
+#endif
 #ifdef ANSIESC
          printf("\n\n\n");
 #endif
@@ -496,6 +504,7 @@
 #endif
 
          UL_ColorBox (0, 0, 80, 2, 0x1e);
+#ifdef DOS
          }
       else
          {
@@ -512,6 +521,7 @@
 
          UL_ColorBox (0, 0, 80, 1, 0x1e);
          }
+#endif
       }
    else
       {
@@ -531,7 +541,9 @@
    int i,n;
 
    infopause=false;
+#ifdef DOS
    SOUNDSETUP = false;
+#endif
    tedlevel=false;
    NoWait=false;
    NoSound=false;
@@ -580,7 +592,9 @@
       printf ("   MONO       - Enable mono-monitor support.\n");
       printf ("   SCREENSHOTS- Clean screen capture for shots.\n");
       printf ("   PAUSE      - Pauses startup screen information.\n");
+#ifdef DOS
       printf ("   SOUNDSETUP - Setup sound for ROTT\n");
+#endif
       printf ("   ENABLEVR   - Enable VR helmet input devices\n");
       printf ("   NOECHO     - Turn off sound reverb\n");
       printf ("   DEMOEXIT   - Exit program when demo is terminated\n");
@@ -698,7 +712,9 @@
          infopause=true;
          break;
        case 14:
+#ifdef DOS
           SOUNDSETUP = true;
+#endif
           break;
        case 15:
           startlevel = (ParseNum(_argv[i + 1])-1);
@@ -1424,7 +1440,11 @@
 
 void ShutDown ( void )
 {
-   if ( ( standalone == false ) || ( SOUNDSETUP ) )
+   if ( ( standalone == false )
+#ifdef DOS
+        || ( SOUNDSETUP ) 
+#endif
+   )
       {
       WriteConfig ();
       }
@@ -1516,8 +1536,10 @@
    printf("LIGHTRATE =%ld\n",GetLightRateTile());
    printf("\nCENTERY=%ld\n",centery);
 #else
+#ifdef DOS
    if ( !SOUNDSETUP )
       {
+#endif
 #if (SHAREWARE==0)
       txtscn = (byte *) W_CacheLumpNum (W_GetNumForName ("regend"), PU_CACHE, CvtNull, 1);
 #else
@@ -1544,15 +1566,19 @@
 
       UL_printf (itoa(ROTTMINORVERSION,&buf[0],10));
 #endif
+#ifdef DOS
       }
 #endif
+#endif
 
+#ifdef DOS
    if ( SOUNDSETUP )
       {
       printf( "\nSound setup complete.\n"
               "Type ROTT to run the game.\n" );
       }
    ShutDown();
+#endif
 
    exit(0);
 }
diff -urNad rott-1.0+dfsg~/rt_main.h rott-1.0+dfsg/rt_main.h
--- rott-1.0+dfsg~/rt_main.h	2008-01-09 13:52:29.000000000 +0100
+++ rott-1.0+dfsg/rt_main.h	2008-01-10 09:20:05.000000000 +0100
@@ -158,7 +158,9 @@
 extern boolean MAPSTATS;
 extern boolean TILESTATS;
 extern boolean HUD;
+#ifdef DOS
 extern boolean SOUNDSETUP;
+#endif
 
 extern char CWD[40];
 
diff -urNad rott-1.0+dfsg~/rt_menu.c rott-1.0+dfsg/rt_menu.c
--- rott-1.0+dfsg~/rt_menu.c	2008-01-10 09:20:03.000000000 +0100
+++ rott-1.0+dfsg/rt_menu.c	2008-01-10 09:20:05.000000000 +0100
@@ -5039,19 +5039,25 @@
    )
 
    {
+#ifdef DOS
    extern boolean SOUNDSETUP;
+#endif
 
    SliderMenu( &MUvolume, 254, 0, 33, 81, 225, 8, "block3", MUSIC_SetVolume,
       "Music Volume", "Low", "High" );
 
+#ifdef DOS
    if ( SOUNDSETUP )
       {
       DrawSoundSetupMainMenu();
       }
    else
       {
+#endif
       DrawControlMenu();
+#ifdef DOS
       }
+#endif
    }
 
 
@@ -5067,7 +5073,9 @@
    )
 
    {
+#ifdef DOS
    extern boolean SOUNDSETUP;
+#endif
    int oldvolume;
 
    oldvolume = FXvolume;
@@ -5075,14 +5083,18 @@
    SliderMenu( &FXvolume, 254, 0, 33, 81, 225, 8, "block3", FX_SetVolume,
       "Sound Volume", "Low", "High" );
 
+#ifdef DOS
    if ( SOUNDSETUP )
       {
       DrawSoundSetupMainMenu();
       }
    else
       {
+#endif
       DrawControlMenu();
+#ifdef DOS
       }
+#endif
    }
 
 
@@ -8539,6 +8551,7 @@
       }
    }
 
+#ifdef DOS
 void SS_DrawSBTypeMenu( void );
 void SS_SBTypeMenu( void );
 void SS_DrawPortMenu( void );
@@ -9288,6 +9301,7 @@
 
    handlewhich = -1;
    }
+#endif
 
 
 //******************************************************************************
@@ -9423,6 +9437,8 @@
    MN_PlayMenuSnd( SD_ESCPRESSEDSND );
    }
 
+#ifdef DOS
+
 //****************************************************************************
 //
 // DrawSoundSetupMainMenu ()
@@ -10147,3 +10163,4 @@
 
    FlipMenuBuf();
    }
+#endif
diff -urNad rott-1.0+dfsg~/rt_menu.h rott-1.0+dfsg/rt_menu.h
--- rott-1.0+dfsg~/rt_menu.h	2008-01-09 13:52:29.000000000 +0100
+++ rott-1.0+dfsg/rt_menu.h	2008-01-10 09:20:05.000000000 +0100
@@ -205,7 +205,9 @@
 int  HandleMultiPageCustomMenu( char **names, int amount, int curpos, char *title, void ( *routine )( int w ), void ( *redrawfunc )( void ), boolean exitonselect );
 int CP_LevelSelectionMenu ( void );
 int CP_EnterCodeNameMenu ( void );
+#ifdef DOS
 void CP_SoundSetup( void );
+#endif
 void QuickSaveGame (void);
 void UndoQuickSaveGame (void);
 void CP_CaptureTheTriadError( void );
diff -urNad rott-1.0+dfsg~/rt_sound.c rott-1.0+dfsg/rt_sound.c
--- rott-1.0+dfsg~/rt_sound.c	2008-01-10 09:20:03.000000000 +0100
+++ rott-1.0+dfsg/rt_sound.c	2008-01-10 09:20:05.000000000 +0100
@@ -66,6 +66,7 @@
 static int remotestart;
 static boolean SoundsRemapped = false;
 
+#ifdef DOS
 int musicnums[ 11 ] = {
    -1, UltraSound, SoundBlaster, SoundMan16, ProAudioSpectrum,
    Awe32, SoundScape, WaveBlaster, GenMidi, SoundCanvas, Adlib
@@ -75,8 +76,19 @@
    -1, UltraSound, SoundBlaster, SoundMan16, ProAudioSpectrum,
    Awe32, SoundScape, Adlib, SoundSource, TandySoundSource, PC
    };
+#else
+int musicnums[ 11 ] = {
+   -1, -1, -1, -1, -1, -1, SoundScape, -1, -1, -1, -1
+   };
 
+int fxnums[ 11 ] = {
+   -1, -1, -1, -1, -1, -1, SoundScape, -1, -1, -1, -1
+   };
+#endif
+
+#if 0
 void MU_SetupGUSInitFile( void );
+#endif
 
 int MUSIC_GetPosition( void ) {
    songposition pos;
@@ -174,6 +186,7 @@
    card = fxnums[ FXMode ];
    if (card==-1) // Check if it is off
       return (0);
+#ifdef DOS
    if ( ( card == SoundBlaster ) || ( card == Awe32 ) )
       {
       extern fx_blaster_config SBSettings;
@@ -183,6 +196,7 @@
       }
    else
       {
+#endif
       status=FX_SetupCard( card, &device );
       if ( status == FX_Ok )
          {
@@ -190,7 +204,9 @@
          *numbits=device.MaxSampleBits;
          *numchannels=device.MaxChannels;
          }
+#ifdef DOS
       }
+#endif
 
    return (status);
    }
@@ -224,6 +240,7 @@
 
    switch (card)
       {
+#ifdef DOS
       case UltraSound:
       case SoundBlaster:
       case SoundMan16:
@@ -231,10 +248,12 @@
       case Awe32:
       case SoundSource:
       case TandySoundSource:
+#endif
       case SoundScape:
          soundstart=W_GetNumForName("digistrt")+1;
          soundtype=fx_digital;
          break;
+#ifdef DOS
       case Adlib:
          soundstart=W_GetNumForName("adstart")+1;
          soundtype=fx_muse;
@@ -243,6 +262,7 @@
          soundstart=W_GetNumForName("pcstart")+1;
          soundtype=fx_muse;
          break;
+#endif
       default:
          Error("FX: Unsupported Card number %d",FXMode);
          break;
@@ -1052,6 +1072,7 @@
    if (card==-1) // Check if it is off
       return (0);
 
+#ifdef DOS
    if ( ( card == SoundBlaster ) || ( card == Awe32 ) || ( card == WaveBlaster ) )
       {
       if ( SD_Started == false )
@@ -1072,6 +1093,11 @@
       }
 
    status=MUSIC_Init( card, MidiAddress );
+#else
+   /* Not DOS, no address config needed */
+   status=MUSIC_Init( card, 0 );
+#endif
+
 
    if (status != MUSIC_Ok) {
       if (bombonerror)
@@ -1105,6 +1131,8 @@
    MUSIC_Shutdown();
    MU_Started=false;
 }
+
+#ifdef DOS
 //***************************************************************************
 //
 // MU_SetupGUSInitFile - initialize GUS stuff
@@ -1126,6 +1154,8 @@
       }
 }
 
+#endif
+
 //***************************************************************************
 //
 // MU_GetNumForType - returns number of song in rottsongs of specific type
diff -urNad rott-1.0+dfsg~/rt_util.c rott-1.0+dfsg/rt_util.c
--- rott-1.0+dfsg~/rt_util.c	2008-01-10 09:20:04.000000000 +0100
+++ rott-1.0+dfsg/rt_util.c	2008-01-10 09:20:05.000000000 +0100
@@ -435,13 +435,14 @@
       }
 
    close(handle);
-#endif
 
    if ( SOUNDSETUP )
       {
       getch();
       }
 
+#endif
+
    #if USE_SDL
    SDL_Quit();
    #endif
diff -urNad rott-1.0+dfsg~/sndcards.h rott-1.0+dfsg/sndcards.h
--- rott-1.0+dfsg~/sndcards.h	2008-01-09 13:52:29.000000000 +0100
+++ rott-1.0+dfsg/sndcards.h	2008-01-10 09:20:05.000000000 +0100
@@ -38,6 +38,7 @@
    {
 //   ASS_NoSound,
    SoundBlaster,
+#ifdef DOS
    ProAudioSpectrum,
    SoundMan16,
    Adlib,
@@ -45,11 +46,14 @@
    SoundCanvas,
    Awe32,
    WaveBlaster,
+#endif
    SoundScape,
    UltraSound,
+#ifdef DOS
    SoundSource,
    TandySoundSource,
    PC,
+#endif
    NumSoundCards
    } soundcardnames;
 
diff -urNad rott-1.0+dfsg~/w_wad.c rott-1.0+dfsg/w_wad.c
--- rott-1.0+dfsg~/w_wad.c	2008-01-10 09:20:04.000000000 +0100
+++ rott-1.0+dfsg/w_wad.c	2008-01-10 09:20:05.000000000 +0100
@@ -238,7 +238,9 @@
         lumpcheck=SafeMalloc(numlumps);
         memset(lumpcheck,255,numlumps);
 #endif
+#ifdef DOS
         if (!SOUNDSETUP)
+#endif
            W_CheckWADIntegrity ();
 }
 
