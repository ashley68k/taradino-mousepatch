#! /bin/sh /usr/share/dpatch/dpatch-run
## r215 | relnev | 2003-04-02 04:50:18 +0200 (Mi, 02 Apr 2003) | 10 lines
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: sparc fixes from Damian M Gryski <dgryski@uwaterloo.ca> :
## DP: o force `size' to be a multiple of 4 in Z_Malloc
## DP:   to prevent unaligned access (SIGBUS)
## DP: o prevent SIGBUS in ConvertStringToPasswordString

@DPATCH@
diff -urNad rott-1.0+dfsg~/rt_cfg.c rott-1.0+dfsg/rt_cfg.c
--- rott-1.0+dfsg~/rt_cfg.c	2008-01-10 09:21:21.000000000 +0100
+++ rott-1.0+dfsg/rt_cfg.c	2008-01-10 09:21:22.000000000 +0100
@@ -386,6 +386,7 @@
 void ConvertStringToPasswordString ( char * string )
 {
    int i;
+   unsigned int j;
    char temp[3];
 
    memset(temp,0,sizeof(temp));
@@ -393,7 +394,11 @@
    for (i=0;i<13;i++)
       {
       memcpy(&temp[0],&string[i<<1],2);
-      sscanf(&temp[0],"%x",(unsigned int *)&passwordstring[i]);
+      sscanf(&temp[0],"%x",&j);
+      passwordstring[i+0] = j & 0xff; j >>= 8;
+      passwordstring[i+1] = j & 0xff; j >>= 8;
+      passwordstring[i+2] = j & 0xff; j >>= 8;
+      passwordstring[i+3] = j & 0xff;
       }
 }
 
diff -urNad rott-1.0+dfsg~/z_zone.c rott-1.0+dfsg/z_zone.c
--- rott-1.0+dfsg~/z_zone.c	2008-01-10 09:21:21.000000000 +0100
+++ rott-1.0+dfsg/z_zone.c	2008-01-10 09:21:22.000000000 +0100
@@ -289,6 +289,12 @@
 //
         size += sizeof(memblock_t);     // account for size of block header
 
+#if defined(__sparc__)
+        /* ensure word alignment */
+        if (size % 4) {
+           size = size + (4 - size % 4);
+        }
+#endif
 
 //
 // if there is a free block behind the rover, back up over them
