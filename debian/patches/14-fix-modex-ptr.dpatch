#!/bin/sh /usr/share/dpatch/dpatch-run
## 14-fix-modex-ptr.dpatch by Michael Karcher
## <debian@mkarcher.dialup.fu-berlin.de>
##
## DP: Cleans up use of integers instead of pointers to hold the base
## DP: address of the frame buffer.

@DPATCH@
diff -urNad rott-1.0+dfsg~/modexlib.c rott-1.0+dfsg/modexlib.c
--- rott-1.0+dfsg~/modexlib.c	2008-01-10 09:18:28.000000000 +0100
+++ rott-1.0+dfsg/modexlib.c	2008-01-10 09:18:29.000000000 +0100
@@ -46,12 +46,12 @@
 
 int    linewidth;
 int    ylookup[MAXSCREENHEIGHT];
-int    page1start;
-int    page2start;
-int    page3start;
+byte*  page1start;
+byte*  page2start;
+byte*  page3start;
 int    screensize;
-unsigned bufferofs;
-unsigned displayofs;
+byte*  bufferofs;
+byte*  displayofs;
 boolean graphicsmode=false;
 
 #ifdef DOS
@@ -249,7 +249,7 @@
 =
 =======================
 */
-void VL_CopyBufferToAll ( unsigned buffer )
+void VL_CopyBufferToAll ( byte * buffer )
 {
    int plane;
 
@@ -258,11 +258,11 @@
       VGAREADMAP(plane);
       VGAWRITEMAP(plane);
       if (page1start!=buffer)
-         memcpy((byte *)page1start,(byte *)buffer,screensize);
+         memcpy(page1start,buffer,screensize);
       if (page2start!=buffer)
-         memcpy((byte *)page2start,(byte *)buffer,screensize);
+         memcpy(page2start,buffer,screensize);
       if (page3start!=buffer)
-         memcpy((byte *)page3start,(byte *)buffer,screensize);
+         memcpy(page3start,buffer,screensize);
       }
 }
 
@@ -517,13 +517,13 @@
     screensize=MAXSCREENHEIGHT*MAXSCREENWIDTH;
 
 #ifdef FULLSCREENHACK    // [!New!
-    page1start=(int)backbuf;
-    page2start=(int)backbuf;
-    page3start=(int)backbuf;
+    page1start=backbuf;
+    page2start=backbuf;
+    page3start=backbuf;
 #else                    // !New!]
-    page1start=(int)sdl_surface->pixels;
-    page2start=(int)sdl_surface->pixels;
-    page3start=(int)sdl_surface->pixels;	
+    page1start=sdl_surface->pixels;
+    page2start=sdl_surface->pixels;
+    page3start=sdl_surface->pixels;	
 #endif                   // !New!
     displayofs = page1start;
     bufferofs = page2start;
@@ -586,7 +586,7 @@
 =
 =======================
 */
-void VL_CopyBufferToAll ( unsigned buffer )
+void VL_CopyBufferToAll ( byte * buffer )
 {
 #ifdef DOS
    int plane;
@@ -627,13 +627,13 @@
 =================
 */
 
-void VL_ClearBuffer (unsigned buf, byte color)
+void VL_ClearBuffer (byte * buf, byte color)
 {
 #ifdef DOS
   VGAMAPMASK(15);
-  memset((byte *)buf,color,screensize);
+  memset(buf,color,screensize);
 #else
-  memset((byte *)buf,color,screensize);
+  memset(buf,color,screensize);
 #endif
 }
 
@@ -692,7 +692,7 @@
 }*/
 // The same as above but for scaling 320x200 to 640x480 so the aspect
 // ratio is right.
-void copyFullScreen(char* source, char* dest)
+void copyFullScreen(byte* source, byte* dest)
 {
 	int i, j, inRow, outRow1, outRow2, outRow3;
 	for(j = 0; j < 40; j++) {
@@ -744,7 +744,7 @@
 void VH_UpdateScreen (void)
 {
 #ifdef FULLSCREENHACK    // [!New!
-	copyFullScreen(backbuf, (char*)sdl_surface->pixels);
+	copyFullScreen(backbuf, (byte*)sdl_surface->pixels);
 #endif                   // !New!]
 	SDL_UpdateRect (SDL_GetVideoSurface (), 0, 0, 0, 0);
 }
@@ -774,7 +774,7 @@
       bufferofs = page1start;
 #else
 #ifdef FULLSCREENHACK    // [!New!
-   copyFullScreen(backbuf, (char*)sdl_surface->pixels); // !New!
+   copyFullScreen(backbuf, (byte*)sdl_surface->pixels); // !New!
 #endif                   // !New!]
    SDL_UpdateRect (sdl_surface, 0, 0, 0, 0);
 #endif
diff -urNad rott-1.0+dfsg~/modexlib.h rott-1.0+dfsg/modexlib.h
--- rott-1.0+dfsg~/modexlib.h	2008-01-09 13:52:30.000000000 +0100
+++ rott-1.0+dfsg/modexlib.h	2008-01-10 09:18:29.000000000 +0100
@@ -104,23 +104,23 @@
 
 extern  int      ylookup[MAXSCREENHEIGHT];      // Table of row offsets
 extern  int      linewidth;
-extern  int      page1start;
-extern  int      page2start;
-extern  int      page3start;
+extern  byte*    page1start;
+extern  byte*    page2start;
+extern  byte*    page3start;
 extern  int      screensize;
-extern  unsigned bufferofs;
-extern  unsigned displayofs;
+extern  byte*    bufferofs;
+extern  byte*    displayofs;
 extern  boolean  graphicsmode;
 
 
 void  GraphicsMode ( void );
 void  SetTextMode ( void );
 void  VL_SetVGAPlaneMode ( void );
-void  VL_ClearBuffer (unsigned buf, byte color);
+void  VL_ClearBuffer (byte * buf, byte color);
 void  VL_ClearVideo (byte color);
 void  VL_DePlaneVGA (void);
 void  VL_CopyDisplayToHidden ( void );
-void  VL_CopyBufferToAll ( unsigned buffer );
+void  VL_CopyBufferToAll ( byte * buffer );
 void  VL_CopyPlanarPage ( byte * src, byte * dest );
 void  VL_CopyPlanarPageToMemory ( byte * src, byte * dest );
 void  XFlipPage ( void );
diff -urNad rott-1.0+dfsg~/rt_game.c rott-1.0+dfsg/rt_game.c
--- rott-1.0+dfsg~/rt_game.c	2008-01-10 09:18:28.000000000 +0100
+++ rott-1.0+dfsg/rt_game.c	2008-01-10 09:18:29.000000000 +0100
@@ -998,7 +998,7 @@
 
 void DrawGameString (int x, int y, char * str, boolean bufferofsonly)
 {
-   unsigned tempbuf;
+   byte* tempbuf;
 
    px=x;
    py=y;
@@ -1543,8 +1543,8 @@
 
 void DrawMPPic (int xpos, int ypos, int width, int height, int heightmod, byte *src, boolean bufferofsonly)
 {
-   byte *olddest;
-   byte *dest;
+   int olddest;
+   int dest;
    int x;
    int y;
    int planes;
@@ -1554,9 +1554,9 @@
    mask = 1 << (xpos&3);
 
 #ifdef DOS
-   olddest = (byte *)(ylookup[ypos] + (xpos>>2));
+   olddest = (ylookup[ypos] + (xpos>>2));
 #else
-   olddest = (byte *)(ylookup[ypos] + xpos);
+   olddest = (ylookup[ypos] + xpos);
 #endif
 
    for (planes = 0; planes < 4; planes++)
@@ -1637,8 +1637,8 @@
 
 void DrawColoredMPPic (int xpos, int ypos, int width, int height, int heightmod, byte *src, boolean bufferofsonly, int color)
 {
-   byte *olddest;
-   byte *dest;
+   int olddest;
+   int dest;
    int x;
    int y;
    int planes;
@@ -1651,9 +1651,9 @@
    mask = 1 << (xpos&3);
 
 #ifdef DOS
-   olddest = (byte *)(ylookup[ypos] + (xpos>>2));
+   olddest = (ylookup[ypos] + (xpos>>2));
 #else
-   olddest = (byte *)(ylookup[ypos] + xpos);
+   olddest = (ylookup[ypos] + xpos);
 #endif
 
    for (planes = 0; planes < 4; planes++)
@@ -1822,8 +1822,8 @@
 
 void DrawPPic (int xpos, int ypos, int width, int height, byte *src, int num, boolean up, boolean bufferofsonly)
 {
-   byte *olddest;
-   byte *dest;
+   int olddest;
+   int dest;
    int x;
    int y;
    int planes;
@@ -1847,9 +1847,9 @@
    mask = 1;
 
 #ifdef DOS
-   olddest = (byte *)(ylookup[ypos] + (xpos>>2));
+   olddest = (ylookup[ypos] + (xpos>>2));
 #else
-   olddest = (byte *)(ylookup[ypos] + xpos);
+   olddest = (ylookup[ypos] + xpos);
 #endif
 
    for (planes = 0; planes < 4; planes++)
@@ -2254,7 +2254,7 @@
 void DrawPause (void)
 {
    pic_t *p;
-   int bufftemp = bufferofs;
+   byte *bufftemp = bufferofs;
 
    bufferofs -= screenofs;
 
@@ -2610,15 +2610,16 @@
 
 void GM_MemToScreen (byte *source, int width, int height, int x, int y)
 {
-   byte *dest, *dest1, *dest2, *dest3, mask;
+   int dest;
+   byte *dest1, *dest2, *dest3, mask;
    byte *screen1, *screen2, *screen3;
    int  plane;
    int w;
    
 #ifdef DOS
-   dest = (byte *)(ylookup[y]+(x>>2));
+   dest = (ylookup[y]+(x>>2));
 #else
-   dest = (byte *)(ylookup[y]+x);
+   dest = (ylookup[y]+x);
 #endif
    mask = 1 << (x&3);
 
@@ -4450,7 +4451,7 @@
 {
    if ((SaveTime+1) < GetTicCount())
    {
-      int temp = bufferofs;
+      byte *temp = bufferofs;
 
       bufferofs = displayofs;
       SaveTime = GetTicCount();
diff -urNad rott-1.0+dfsg~/rt_main.c rott-1.0+dfsg/rt_main.c
--- rott-1.0+dfsg~/rt_main.c	2008-01-10 09:18:28.000000000 +0100
+++ rott-1.0+dfsg/rt_main.c	2008-01-10 09:18:29.000000000 +0100
@@ -979,7 +979,7 @@
                while ((!LastScan) && (!IN_GetMouseButtons()))
                   {
                   int i;
-                  unsigned tempbuf;
+                  byte *tempbuf;
                   MenuFadeOut();
                   ClearGraphicsScreen();
                   SetPalette(&dimpal[0]);
diff -urNad rott-1.0+dfsg~/rt_ted.c rott-1.0+dfsg/rt_ted.c
--- rott-1.0+dfsg~/rt_ted.c	2008-01-10 09:18:28.000000000 +0100
+++ rott-1.0+dfsg/rt_ted.c	2008-01-10 09:18:29.000000000 +0100
@@ -1143,7 +1143,7 @@
    int lastmem=0;
    int lastcache=0;
    int ticdelay;
-   unsigned tempbuf;
+   byte * tempbuf;
 
    if (CachingStarted==false)
       {
diff -urNad rott-1.0+dfsg~/rt_vid.c rott-1.0+dfsg/rt_vid.c
--- rott-1.0+dfsg~/rt_vid.c	2008-01-09 13:52:30.000000000 +0100
+++ rott-1.0+dfsg/rt_vid.c	2008-01-10 09:18:29.000000000 +0100
@@ -968,7 +968,7 @@
 
 void SwitchPalette (byte * newpal, int steps)
 {
-   int temp;
+   byte *temp;
 
    VL_FadeOut(0,255,0,0,0,steps>>1);
 
